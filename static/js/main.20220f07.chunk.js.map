{"version":3,"sources":["components/Header.js","components/Footer.js","components/Loading.js","App.js","serviceWorker.js","index.js","models/index.js","stores/user.js","stores/image.js","stores/history.js","stores/auth.js","stores/index.js"],"names":["Header","styled","header","A","a","StyledLink","NavLink","Login","div","StyledButton","Button","Component","observer","history","useHistory","useStores","UserStore","AuthStore","useEffect","pullUser","to","activeClassName","className","exact","currentUser","attributes","username","type","onClick","logout","console","log","push","Footer","footer","href","target","GithubOutlined","YuqueOutlined","Loading","Home","lazy","History","About","Register","App","fallback","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","AV","init","appId","appKey","serverURL","Auth","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","loginedUser","logIn","logOut","current","Uploader","add","file","filename","item","Object","avFile","File","set","save","serverFile","find","page","limit","query","Query","include","skip","descending","equalTo","results","this","observable","action","newFilename","newFile","isUpoading","err","finally","newList","list","concat","isLoading","append","length","hasMore","values","resetUser","HistoryStore","reset","ImageStore","context","createContext","stores","useContext"],"mappings":"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","file":"static/js/main.20220f07.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport { Button } from 'antd';\nimport { useStores } from '../stores';\n\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  padding: 10px 160px;\n  background-color: #353a3f;\n  -webkit-animation: dJVbz 1500ms ease;\n  animation: dJVbz 1500ms ease;\n`;\n\nconst A = styled.a`\n  color:#fff;\n  font-size:1.25rem;\n  font-weight:500;\n`;\n\nconst StyledLink = styled(NavLink)`\n  color: #727579;\n  margin-left: 30px;\n  font-weight:500;\n\n  &.active {\n    color:#ffffff;\n  }\n  \n`;\n\nconst Login = styled.div`\n  margin-left: auto;\n  color:#fff;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-left: 10px;\n  background-color: #353a3f;\n  border:1px solid #fff;\n  color:#fff;\n  &:hover{\n    background-color: #fff;\n    border:1px solid #353a3f;\n    color:#353a3f;\n  }\n  &:focus{\n    background-color: #fff;\n    border:1px solid #353a3f;\n    color:#353a3f;\n  }\n\n`;\n\n\nconst Component = observer(() => {\n\n  const history = useHistory();\n  const { UserStore, AuthStore } = useStores();\n\n  const handleLogout = () => {\n    AuthStore.logout();\n  };\n\n  const handleLogin = () => {\n    console.log('跳转到登录页面')\n    history.push('/login');\n  };\n\n  const handleRegister = () => {\n    console.log('跳转到注册页面')\n    history.push('/register');\n  }\n\n  useEffect(() => {\n    UserStore.pullUser();\n  }, [])//eslint-disable-line\n\n  return (\n    <Header>\n      <A>ImageHost</A>\n      <nav>\n        <StyledLink to=\"/\" activeClassName=\"active\" className=\"list-group-item\" exact>首页</StyledLink>\n        <StyledLink to=\"/history\" activeClassName=\"active\" className=\"list-group-item\" >上传历史</StyledLink>\n        <StyledLink to=\"/about\" activeClassName=\"active\" className=\"list-group-item\">关于我</StyledLink>\n      </nav>\n      <Login>\n        {\n          UserStore.currentUser ? <>\n            Hi,{UserStore.currentUser.attributes.username} <StyledButton type=\"primary\" onClick={handleLogout}>注销</StyledButton>\n          </> : <>\n            <StyledButton type=\"primary\" onClick={handleLogin}>登录</StyledButton>\n            <StyledButton type=\"primary\" onClick={handleRegister}>注册</StyledButton>\n          </>\n\n        }\n      </Login>\n\n    </Header>\n  );\n});\n\nexport default Component;","import React from 'react';\nimport styled from 'styled-components';\nimport { YuqueOutlined, GithubOutlined } from '@ant-design/icons';\n\nconst Footer = styled.footer`\n  padding: 14px 100px;\n  text-align: center;\n  font-size: 15px;\n  color: #aaa;\n  background-color:#f5f5f5;\n  height:50px;\n`;\nconst A = styled.a`\n  color: #aaa;\n  margin: 15px;\n    :hover{\n        color: #40a9ff;\n    }\n`\n\nfunction Component() {\n  return (\n    <Footer>\n      <A href='https://github.com/adrianne-a' target='_blank' ><GithubOutlined /></A>\n\n      <A>@&nbsp;Adrianne</A>\n      <A href='https://www.yuque.com/adrianne-a' target='_blank' > <YuqueOutlined /></A>\n    </Footer>\n  );\n}\n\nexport default Component;","import React from 'react';\n\nexport default function Loading() {\n  return (\n    <div>Loading...</div>\n  );\n}\n\n","import React, { Suspense, lazy, Fragment } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Loading from './components/Loading';\n\n\nimport {\n  Switch,\n  Route\n} from 'react-router-dom';\n\nconsole.log(Loading)\n\n\nconst Home = lazy(() => import('./pages/Home'));\nconst History = lazy(() => import('./pages/History'));\nconst About = lazy(() => import('./pages/About'));\nconst Login = lazy(() => import('./pages/Login'));\nconst Register = lazy(() => import('./pages/Register'));\n\n\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <main>\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Fragment>\n              <div className='pad'>\n                <Route path=\"/history\" component={History} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/register\" component={Register} />\n              </div>\n            </Fragment>\n          </Switch>\n        </Suspense>\n      </main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'mobx-react-lite/batchingForReactDom';\n// import Model from './models';\nimport {\n  HashRouter as Router\n} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import AV, { User } from 'leancloud-storage';\n\n\nAV.init({\n  appId: \"KZH2gZRBBs227CVW1IX6RN5F-gzGzoHsz\",\n  appKey: \"3ilZntc1dnNLC8FVF2Gw4xVa\",\n  serverURL: \"https://kzh2gzrb.lc-cn-n1-shared.com\"\n});\n\n\nconst Auth = {\n  register(username, password) {\n    let user = new User();\n    user.setUsername(username);\n    user.setPassword(password);\n    return new Promise((resolve, reject) => {\n      user.signUp().then(loginedUser => resolve(loginedUser), error => reject(error))\n    });\n  },\n\n  login(username, password) {\n    console.log('------')\n    console.log(username, password)\n    return new Promise((resolve, reject) => {\n      User.logIn(username, password).then(loginedUser => resolve(loginedUser), error => reject(error));\n    });\n  },\n\n  logout() {\n    User.logOut();\n  },\n\n  getCurrentUser() {\n    return User.current();\n  }\n\n};\n\nconst Uploader = {\n  add(file, filename) {\n    const item = new AV.Object('Image');\n    const avFile = new AV.File(filename, file);\n    item.set('filename', filename);\n    item.set('owner', User.current());\n    console.log(User.current());\n    item.set('url', avFile);\n    return new Promise((resolve, reject) => {\n      item.save().then(serverFile => resolve(serverFile), error => reject(error));\n    });\n  },\n\n  find({ page = 0, limit = 10 }) {\n    const query = new AV.Query('Image');\n    query.include('owner');\n    query.limit(limit);\n    query.skip(page * limit);\n    query.descending('createdAt');\n    query.equalTo('owner', AV.User.current());\n    return new Promise((resolve, reject) => {\n      query.find()\n        .then(results => resolve(results))\n        .catch(error => reject(error))\n    });\n  }\n};\n\nwindow.Uploader = Uploader;\n\nexport {\n  Auth,\n  Uploader\n};","import { observable, action } from 'mobx';\nimport { Auth } from '../models';\n\nclass UserStore {\n  @observable currentUser = null;\n\n  @action pullUser() {\n    this.currentUser = Auth.getCurrentUser()\n  }\n\n  @action resetUser() {\n    this.currentUser = null;\n  }\n}\n\n\nexport default new UserStore() ;\n","import { observable, action } from 'mobx';\nimport { message } from 'antd';\nimport { Uploader } from '../models';\n\nclass ImageStore {\n  @observable filename = \"\";\n  @observable file = null;\n  @observable isUpoading = false;\n  @observable serverFile = null;\n\n  @action setFilename(newFilename) {\n    this.filename = newFilename;\n  }\n\n  @action setFile(newFile) {\n    this.file = newFile;\n  }\n\n  @action upload() {\n    this.isUpoading = true;\n    this.serverFile = null;\n    return new Promise((resolve, reject) => {\n      Uploader.add(this.file, this.filename)\n        .then(serverFile => {\n          this.serverFile = serverFile;\n          resolve(serverFile);\n        }).catch(err => {\n          console.error('上传失败');\n          message.error('上传失败');\n          reject(err);\n        }).finally(() => {\n          this.isUpoading = false;\n        });\n    })\n\n  }\n\n  @action reset() {\n    this.isUpoading = false;\n    this.serverFile = null;\n  }\n\n\n}\n\n\nexport default new ImageStore();\n","import { observable, action } from \"mobx\";\nimport { Uploader } from '../models';\nimport { message } from \"antd\";\n\nclass HistoryStore {\n    @observable list = [];\n    @observable isLoading = false;\n    @observable hasMore = true;\n    @observable page = 0;\n    limit = 10;\n\n    @action append(newList) {\n        this.list = this.list.concat(newList);\n    }\n\n    @action find() {\n        this.isLoading = true;\n        Uploader.find({ page: this.page, limit: this.limit })\n            .then(newList => {\n                this.append(newList);\n                this.page++;\n                if (newList.length < this.limit) {\n                    this.hasMore = false;\n                }\n            }).catch(error => {\n                console.log(error);\n                message.error('加载数据失败');\n            }).finally(() => {\n                this.isLoading = false;\n            });\n    }\n    @action reset() {\n        this.list = [];\n        this.isLoading = false;\n        this.hasMore = true;\n        this.page = 0;\n    }\n}\n\nexport default new HistoryStore();","import { observable, action } from 'mobx';\nimport { message } from 'antd';\nimport { Auth } from '../models';\nimport UserStore from './user';\nimport ImageStore from './image';\nimport HistoryStore from './history';\n\nclass AuthStore {\n  @observable values = {\n    username: '',\n    password: ''\n  };\n\n  @action setUsername(username) {\n    this.values.username = username;\n  }\n\n  @action setPassword(password) {\n    this.values.password = password;\n  }\n\n  @action login() {\n\n    return new Promise((resolve, reject) => {\n      Auth.login(this.values.username, this.values.password)\n        .then(user => {\n          UserStore.pullUser();\n          resolve(user);\n        }).catch(err => {\n          UserStore.resetUser();\n          message.error('登录失败');\n          reject(err);\n        })\n    });\n  }\n\n  @action register() {\n    return new Promise((resolve, reject) => {\n      Auth.register(this.values.username, this.values.password)\n        .then(user => {\n          UserStore.pullUser();\n          resolve(user);\n        }).catch(err => {\n          UserStore.resetUser();\n          message.error('注册失败');\n          reject(err);\n        })\n    });\n  }\n\n  @action logout() {\n    Auth.logout();\n    UserStore.resetUser();\n    HistoryStore.reset();\n    ImageStore.reset();\n  }\n\n}\n\n\nexport default new AuthStore();\n","import { createContext, useContext } from 'react';\nimport AuthStore from './auth';\nimport UserStore from './user';\nimport ImageStore from './image';\nimport HistoryStore from './history';\n\nconst context = createContext({\n  AuthStore,\n  UserStore,\n  ImageStore,\n  HistoryStore\n});\n\nwindow.stores = {\n  AuthStore,\n  UserStore,\n  ImageStore,\n  HistoryStore\n};\n\nexport const useStores = () => useContext(context);"],"sourceRoot":""}